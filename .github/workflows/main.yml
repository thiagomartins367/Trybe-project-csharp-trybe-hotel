name: Format and Test API

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  linter:
    name: Run linter dotnet format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      
      - name: Display dotnet version
        run: dotnet --version
      
      - name: Install dependencies
        run: dotnet restore ./src
      
      - name: Run linter (dotnet format)
        run: dotnet format ./src/TrybeHotel/TrybeHotel.csproj --verify-no-changes

  test:
    name: Test API
    runs-on: ubuntu-latest
    needs: linter
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      
      - name: Display dotnet version
        run: dotnet --version
      
      - name: Install dependencies
        run: dotnet restore ./src
      
      - name: Build API
        run: dotnet build ./src/TrybeHotel/TrybeHotel.csproj --no-restore -c Debug
      
      - name: Run integration tests
        run: dotnet test ./src/TrybeHotel.Test/TrybeHotel.test.csproj --no-restore -c Debug
        env:
          ASPNETCORE_ENVIRONMENT: ${{ vars.ASPNETCORE_ENVIRONMENT }}
          PORT: ${{ vars.PORT }}
          DB_SERVER: ${{ vars.DB_SERVER }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_DIALECT: ${{ vars.DB_DIALECT }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          AUTH_TOKEN_SECRET_KEY: ${{ secrets.AUTH_TOKEN_SECRET_KEY }}
          AUTH_TOKEN_EXPIRE_DAYS: ${{ vars.AUTH_TOKEN_EXPIRE_DAYS }}
          SOFTWARE_LICENSE_URL: ${{ vars.SOFTWARE_LICENSE_URL }}
